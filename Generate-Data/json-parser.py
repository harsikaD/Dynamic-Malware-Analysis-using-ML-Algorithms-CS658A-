import json
import os
import re;
import pandas as pd

featuresSet=set();


def extractDataNew(json_data,fileClass):
    lst=[];
    
    tempList=[];
    res = [i.start() for i in re.finditer(" \"api\": \"", json_data)]
    for i in res:
        end=[i.start() for i in re.finditer("\", ", json_data[i:])][0];
        
        tempList.append(json_data[i+9:i+end]);
        
    return tempList;
    

def extractData(json_data,fileClass):
    lst=[];
    tempDict={};
    tempList=[];
    apiDict={};
    apiKeys=0;
    
    """
        ###print(item)
        if "marks" in item.keys():
            if "call" in item["marks"][0].keys():
                if "api" in item["marks"][0]["call"].keys():
                    tempList.append(item["marks"][0]["call"]["api"]);
    """
    if "behavior" in json_data.keys():
        if "generic" in json_data["behavior"].keys():
        

            for i in json_data["behavior"]["generic"]:
                if "summary" in i.keys():
                    if "dll_loaded" in i["summary"].keys():
                        tempList.append(i["summary"]["dll_loaded"])
                    if "file_written" in i["summary"].keys():
                        tempList.append(i["summary"]["file_written"])
                    if "regkey_written" in i["summary"].keys():
                        tempList.append(i["summary"]["regkey_written"])
                    if "regkey_deleted" in i["summary"].keys():
                        tempList.append(i["summary"]["regkey_deleted"])
                    if "file_deleted" in i["summary"].keys():
                        tempList.append(i["summary"]["file_deleted"])

            
        if "apistats" in json_data["behavior"].keys():
            for i in json_data["behavior"]["apistats"].keys():
                apiKeys=i;

            apiDict=(json_data["behavior"]["apistats"][apiKeys]);

    
    for i in tempList:
        for j in i:
            featuresSet.add(j);

    for k,v in apiDict.items():
        featuresSet.add(k);
    
    tempList.append(apiDict);
    tempList.append(fileClass);
    return tempList;
    

def get_files(f_type,folderName):
    name_list = []

    final_name_list = []
    tempfile = folderName
    for root, dir, files in os.walk("."):
        if tempfile == root :
            name_list = files

    for file1 in name_list:
        f_name = file1.split('.')
        if f_name[1] == f_type:
            final_name_list.append(f_name[0])
    
    return final_name_list

dataList=[];

fileFolder=["./Benign Final JSON Files","./Malware Final JSON Files/trojan-dropper","./Malware Final JSON Files/worms","./Malware Final JSON Files/trojan-downloader",
"./Malware Final JSON Files/virus","./Malware Final JSON Files/backdoor","./Malware Final JSON Files/trojan"];

fileClasses=["normal","trojandropper","worm","trojandownloader","virus","backdoor","trojan"];

allFiles=[];

for i in fileFolder:
    allFiles.append(get_files('json',i));

i=0;
count=0;
for files in allFiles:
    for fileName in files:
        try:
            f = open(fileFolder[i]+"/"+fileName+".json")
            data = json.load(f)
            duration=data["info"]["duration"];
            #score=data["info"]["score"];
            
            dataListTemp=extractData(data,fileClasses[i]);
            dataListTemp.append(duration);
            #dataListTemp.append(score);
            dataList.append(dataListTemp);
        except Exception as e:
            count+=1;
            print(e);
    i+=1;

print("Done");

idx=0;
finalAllData=[];
featuresSet=list(featuresSet);

for ele in dataList:
    tempDataList=[];
    tempDataDict={};
    for tempFeat in featuresSet:
        tempDataDict[tempFeat]=0;

    idx=0;
    while idx<len(ele)-3:
        for feat in ele[idx]:
            tempDataDict[feat]=1;
        
        idx+=1;
    
    for k,v in ele[len(ele)-3].items():
        tempDataDict[k]=v;
        
    tempDataDict["duration"]=(ele[len(ele)-1]);
    #tempDataDict["score"]=(ele[len(ele)]);
    tempDataDict["label"]=(ele[len(ele)-2]);

    finalAllData.append(tempDataDict);

featuresSet.append("duration");
#featuresSet.append("score");
featuresSet.append("label");

#print(len(finalAllData[len(finalAllData)-1]));
#print(len(featuresSet));
#print(len(finalAllData)*len(finalAllData[len(finalAllData)-1]))

df=pd.DataFrame(finalAllData);
print(df);

df.to_csv("final-data.csv");
print("final-data.csv created.")
